{"version":3,"sources":["api/getData.js","shapes/ModeSelectionShape.js","components/ModeSelection/ModeSelection.jsx","helpers/createField.js","shapes/CellShape.js","shapes/SquareShape.js","components/Cell/Cell.jsx","components/Square/Square.jsx","shapes/HistoryShape.js","components/History/History.jsx","App.jsx","index.jsx"],"names":["loadData","PropTypes","func","isRequired","a","fetch","response","result","json","ModeSelection","memo","setField","setOpenSquare","setHistoryHover","setLoadingError","useState","modes","setModes","disabledStatus","setDisabledStatus","useEffect","Object","entries","handleSelect","useCallback","event","value","target","field","cells","squares","i","push","id","uuidv4","createField","handleButton","className","onChange","map","mode","ClassName","type","onClick","disabled","arrayOf","shape","number","string","Cell","row","square","handleHover","data-place","onMouseOver","onFocus","Square","place","dataset","coordinates","point","previous","index","key","HistoryShape","historyHover","History","propTypes","App","openSquare","loadingError","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fa2f065.chunk.js","sourcesContent":["const BASE_URL = 'https://demo1030918.mockable.io/';\n\nexport const loadData = async() => {\n  const response = await fetch(BASE_URL);\n  const result = response.json();\n\n  return result;\n};\n","import PropTypes from 'prop-types';\n\nexport const ModeSelectionShape = {\n  setField: PropTypes.func.isRequired,\n  setOpenSquare: PropTypes.func.isRequired,\n  setHistoryHover: PropTypes.func.isRequired,\n  setLoadingError: PropTypes.func.isRequired,\n}.isRequired;\n","import React, { useState, useEffect, memo, useCallback } from 'react';\nimport './ModeSelection.scss';\nimport ClassName from 'classnames';\nimport { ModeSelectionShape } from '../../shapes/ModeSelectionShape';\nimport { loadData } from '../../api/getData';\nimport { createField } from '../../helpers/createField';\n\nexport const ModeSelection = memo(({\n  setField,\n  setOpenSquare,\n  setHistoryHover,\n  setLoadingError,\n}) => {\n  const [modes, setModes] = useState([]);\n  const [disabledStatus, setDisabledStatus] = useState(true);\n\n  useEffect(async() => {\n    try {\n      const response = await loadData();\n      const result = Object.entries(response);\n\n      setModes(result);\n      setLoadingError(false);\n    } catch {\n      setLoadingError(true);\n    }\n  }, []);\n\n  const handleSelect = useCallback((event) => {\n    const { value } = event.target;\n\n    value === 'Pick mode'\n      ? setDisabledStatus(true)\n      : setDisabledStatus(false);\n\n    setOpenSquare(false);\n    setHistoryHover([]);\n\n    const field = createField(value);\n\n    setField(field);\n  }, []);\n\n  const handleButton = useCallback(() => {\n    setOpenSquare(true);\n  }, []);\n\n  return (\n    <form className=\"form\">\n      <select className=\"form__select\" onChange={handleSelect}>\n        <option>Pick mode</option>\n\n        {modes.map(mode => (\n          <option key={mode[0]} value={mode[1].field}>\n            {mode[0]}\n          </option>\n        ))}\n      </select>\n\n      <button\n        className={ClassName('form__button', {\n          'form__button--disabled': disabledStatus,\n        })}\n        type=\"button\"\n        onClick={handleButton}\n        disabled={disabledStatus}\n      >\n        START\n      </button>\n    </form>\n  );\n});\n\nModeSelection.propTypes = ModeSelectionShape;\n","import { v4 as uuidv4 } from 'uuid';\n\nexport const createField = (cells) => {\n  const squares = [];\n\n  for (let i = 1; i <= cells; i += 1) {\n    squares.push({\n      value: i,\n      id: uuidv4(),\n    });\n  }\n\n  return squares;\n};\n","import PropTypes from 'prop-types';\n\nconst cells = PropTypes.arrayOf(PropTypes.shape({\n  value: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired,\n})).isRequired;\n\nexport const CellShape = {\n  row: cells,\n  square: cells,\n  handleHover: PropTypes.func.isRequired,\n}.isRequired;\n","import PropTypes from 'prop-types';\n\nexport const SquareShape = {\n  field: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.number.isRequired,\n    id: PropTypes.string.isRequired,\n  })).isRequired,\n  setHistoryHover: PropTypes.func.isRequired,\n}.isRequired;\n","import React from 'react';\nimport './Cell.scss';\nimport { CellShape } from '../../shapes/CellShape';\n\nexport const Cell = ({ row, square, handleHover }) => (\n  <button\n    className=\"cell\"\n    type=\"button\"\n    data-place={`row ${row.value} col ${square.value}`}\n    onMouseOver={handleHover}\n    onFocus={handleHover}\n  />\n);\n\nCell.propTypes = CellShape;\n","import React, { memo, useCallback } from 'react';\nimport './Square.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport { SquareShape } from '../../shapes/SquareShape';\nimport { Cell } from '../Cell/Cell';\n\nexport const Square = memo(({ field, setHistoryHover }) => {\n  const handleHover = useCallback((event) => {\n    const { place } = event.target.dataset;\n\n    if (event.type === 'focus') {\n      return;\n    }\n\n    const coordinates = {\n      point: place,\n      id: uuidv4(),\n    };\n\n    setHistoryHover(previous => ([\n      coordinates,\n      ...previous,\n    ]));\n  }, []);\n\n  return (\n    <div className=\"square\">\n      {field.map(row => (\n        <div key={row.id} className=\"square__row\">\n          {field.map((square, index) => {\n            const key = row.id + index;\n\n            return (\n              <Cell\n                key={key}\n                row={row}\n                square={square}\n                handleHover={handleHover}\n              />\n            );\n          })}\n        </div>\n      ))}\n    </div>\n  );\n});\n\nSquare.propTypes = SquareShape;\n","import PropTypes from 'prop-types';\n\nexport const HistoryShape = {\n  historyHover: PropTypes.arrayOf(PropTypes.shape({\n    point: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  })).isRequired,\n}.isRequired;\n","import React, { memo } from 'react';\nimport './History.scss';\nimport { HistoryShape } from '../../shapes/HistoryShape';\n\nexport const History = memo(({ historyHover }) => (\n  <div className=\"history\">\n    <h3 className=\"history__title\">History</h3>\n\n    <div className=\"history__scroll\">\n      {historyHover.map(({ point, id }) => (\n        <div key={id} className=\"history__item\">{point}</div>\n      ))}\n    </div>\n  </div>\n));\n\nHistory.propTypes = HistoryShape;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { ModeSelection } from './components/ModeSelection/ModeSelection';\nimport { Square } from './components/Square/Square';\nimport { History } from './components/History/History';\n\nexport const App = () => {\n  const [field, setField] = useState([]);\n  const [historyHover, setHistoryHover] = useState([]);\n  const [openSquare, setOpenSquare] = useState(false);\n  const [loadingError, setLoadingError] = useState(false);\n\n  return (\n    <div className=\"container\">\n      <ModeSelection\n        setField={setField}\n        setOpenSquare={setOpenSquare}\n        setHistoryHover={setHistoryHover}\n        setLoadingError={setLoadingError}\n      />\n\n      {loadingError && (\n        <div className=\"container__error\">\n          Failed to load data. Reload the page!\n        </div>\n      )}\n\n      {openSquare && (\n        <div className=\"container__main\">\n          <Square\n            field={field}\n            historyHover={historyHover}\n            setHistoryHover={setHistoryHover}\n          />\n\n          <History historyHover={historyHover} />\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}