{"version":3,"sources":["api/getData.js","components/ModeSelection/ModeSelectionShape.js","components/ModeSelection/ModeSelection.jsx","components/Square/Square.jsx","components/Square/SquareShape.js","components/History/HistoryShape.js","components/History/History.jsx","App.jsx","index.jsx"],"names":["loadData","PropTypes","func","isRequired","a","fetch","response","result","json","ModeSelection","memo","setField","setOpenSquare","setHistoryHover","useState","modes","setModes","disableStatus","setDisableStatus","useEffect","Object","entries","fetchData","handleChange","useCallback","event","value","target","loadField","handleButton","numberOfCells","squares","i","push","className","onChange","map","mode","field","ClassName","type","onClick","disabled","Square","arrayOf","number","string","historyHover","handleHover","dataset","place","row","square","data-place","onMouseOver","HistoryShape","History","item","propTypes","App","openSquare","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5a1a31a.chunk.js","sourcesContent":["const BASE_URL = 'http://demo1030918.mockable.io/';\n\nexport const loadData = async() => {\n  const response = await fetch(BASE_URL);\n  const result = response.json();\n\n  return result;\n};\n","import PropTypes from 'prop-types';\n\nexport const ModeSelectionShape = {\n  setField: PropTypes.func.isRequired,\n  setOpenSquare: PropTypes.func.isRequired,\n  setHistoryHover: PropTypes.func.isRequired,\n}.isRequired;\n","import React, { useState, useEffect, memo, useCallback } from 'react';\nimport './ModeSelection.scss';\nimport ClassName from 'classnames';\nimport { ModeSelectionShape } from './ModeSelectionShape';\nimport { loadData } from '../../api/getData';\n\nexport const ModeSelection = memo(({\n  setField,\n  setOpenSquare,\n  setHistoryHover,\n}) => {\n  const [modes, setModes] = useState([]);\n  const [disableStatus, setDisableStatus] = useState(true);\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await loadData();\n      const result = Object.entries(response);\n\n      setModes(result);\n    }\n\n    fetchData();\n  }, []);\n\n  const handleChange = useCallback((event) => {\n    const { value } = event.target;\n\n    if (value === 'Pick mode') {\n      setOpenSquare(false);\n      setDisableStatus(true);\n      setHistoryHover([]);\n    } else {\n      setDisableStatus(false);\n      setHistoryHover([]);\n    }\n\n    loadField(value);\n  }, []);\n\n  const handleButton = useCallback(() => {\n    setOpenSquare(true);\n  }, []);\n\n  const loadField = useCallback((numberOfCells) => {\n    const squares = [];\n\n    for (let i = 1; i <= numberOfCells; i += 1) {\n      squares.push(i);\n    }\n\n    setField(squares);\n  }, []);\n\n  return (\n    <form className=\"form\">\n      <select className=\"form__select\" onChange={handleChange}>\n        <option>Pick mode</option>\n\n        {modes.map(mode => (\n          <option key={mode[0]} value={mode[1].field}>\n            {mode[0]}\n          </option>\n        ))}\n      </select>\n\n      <button\n        className={ClassName('form__button', {\n          'form__button--disabled': disableStatus,\n        })}\n        type=\"button\"\n        onClick={handleButton}\n        disabled={disableStatus}\n      >\n        START\n      </button>\n    </form>\n  );\n});\n\nModeSelection.propTypes = ModeSelectionShape;\n","import React, { memo, useCallback } from 'react';\nimport './Square.scss';\nimport { SquareShape } from './SquareShape';\n\nexport const Square = memo(({ field, historyHover, setHistoryHover }) => {\n  const handleHover = useCallback((event) => {\n    const { target } = event;\n\n    setHistoryHover([...historyHover, target.dataset.place]);\n  }, [historyHover]);\n\n  return (\n    <div className=\"square\">\n      {field.map(row => (\n        <div key={row} className=\"square__row\">\n          {field.map(square => (\n            // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n            <button\n              className=\"square__item\"\n              key={row + square}\n              type=\"button\"\n              data-place={`row ${row} col ${square}`}\n              onMouseOver={handleHover}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n});\n\nSquare.propTypes = SquareShape;\n","import PropTypes from 'prop-types';\n\nexport const SquareShape = {\n  field: PropTypes.arrayOf(PropTypes.number).isRequired,\n  historyHover: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setHistoryHover: PropTypes.func.isRequired,\n}.isRequired;\n","import PropTypes from 'prop-types';\n\nexport const HistoryShape = {\n  historyHover: PropTypes.arrayOf(PropTypes.string).isRequired,\n}.isRequired;\n","import React, { memo } from 'react';\nimport './History.scss';\nimport { HistoryShape } from './HistoryShape';\n\nexport const History = memo(({ historyHover }) => (\n  <div className=\"history\">\n    <h3 className=\"history__title\">History</h3>\n    {historyHover.map(item => (\n      <div key={item} className=\"history__item\">{item}</div>\n    ))}\n  </div>\n));\n\nHistory.propTypes = HistoryShape;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { ModeSelection } from './components/ModeSelection/ModeSelection';\nimport { Square } from './components/Square/Square';\nimport { History } from './components/History/History';\n\nexport const App = () => {\n  const [field, setField] = useState([]);\n  const [historyHover, setHistoryHover] = useState([]);\n  const [openSquare, setOpenSquare] = useState(false);\n\n  return (\n    <div className=\"container\">\n      <ModeSelection\n        setField={setField}\n        setOpenSquare={setOpenSquare}\n        setHistoryHover={setHistoryHover}\n      />\n\n      {openSquare && (\n        <div className=\"container__main\">\n          <Square\n            field={field}\n            historyHover={historyHover}\n            setHistoryHover={setHistoryHover}\n          />\n\n          <History historyHover={historyHover} />\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}